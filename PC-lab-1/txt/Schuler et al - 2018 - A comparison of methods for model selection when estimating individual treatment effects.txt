arXiv:1804.05146v2 [stat.ML] 13 Jun 2018

A comparison of methods for model selection
when estimating individual treatment effects
Alejandro Schuler
aschuler@stanford.edu
Biomedical Informatics Research
Stanford University
Palo Alto, CA, USA
Robert Tibshirani
tibs@stanford.edu
Department of Statistics
Stanford University
Palo Alto, CA, USA

Michael Baiocchi
baiocchi@stanford.edu
Department of Medicine
Stanford University
Palo Alto, CA, USA

Nigam Shah
nigam@stanford.edu
Biomedical Informatics Research
Stanford University
Palo Alto, CA, USA

June 15, 2018
Abstract
Practitioners in medicine, business, political science, and other fields are
increasingly aware that decisions should be personalized to each patient,
customer, or voter. A given treatment (e.g. a drug or advertisement)
should be administered only to those who will respond most positively, and
certainly not to those who will be harmed by it. Individual-level treatment
effects can be estimated with tools adapted from machine learning, but
different models can yield contradictory estimates. Unlike risk prediction
models, however, treatment effect models cannot be easily evaluated against
each other using a held-out test set because the true treatment effect itself
is never directly observed. Besides outcome prediction accuracy, several
metrics that can leverage held-out data to evaluate treatment effects
models have been proposed, but they are not widely used. We provide a
didactic framework that elucidates the relationships between the different
approaches and compare them all using a variety of simulations of both
randomized and observational data. Our results show that researchers
estimating heterogenous treatment effects need not limit themselves to
a single model-fitting algorithm. Instead of relying on a single method,
multiple models fit by a diverse set of algorithms should be evaluated
against each other using an objective function learned from the validation
set. The model minimizing that objective should be used for estimating
the individual treatment effect for future individuals.

1

1

Introduction

The general decision problem we address is as follows: for a particular individual, a decision maker must choose between prescribing an intervention or no
intervention. The intervention (treatment) may be a drug, an advertisement, a
campaign email etc. The decision-maker’s goal is to maximize some outcome for
that patient or customer, which may be their lifespan, their net purchases, their
political engagement etc. This is a causal inference problem because we seek to
discover a causal relationship between the intervention and outcome. The causal
treatment effect is the difference between what would have happened had the
individual been given the intervention and what would of happened had they not
been. The outcomes under these different scenarios are referred to as potential
outcomes (25).
Prior to the development of modern statistical methods, treatment policies
were generally one-size-fits-all prescriptions based on estimates of the average
treatment effect (26). Experiments for inferring average effects limit individual
heterogeneity by imposing strict criteria on the population under study (28).
Recently, however, researchers in multiple domains have attempted to leverage
modern statistical technology and real-world data to tailor decisions to individuals; this phenomena is exemplified by the rise of personalized medicine (12) and
targeted advertisement (3, 21). Decision-makers recognize that treating to the
average, while expedient, does not result in the best outcome for all individuals (19, 26). Attention is increasingly focused on the estimation of individual
treatment effects. 1
To clarify further discussion, we characterize each individual i by a vector
of pre-treatment features or covariates xi , their treatment status (intervention
wi = 1 or no intervention wi = 0) and their outcome yi . Using the potential
outcomes framework (25), we write the potential outcomes under treatment and
control as Y (1) and Y (0) and their conditional means as µ0 (x) = E[Y (0)|X = x]
and µ1 (x) = E[Y (1)|X = x]. The estimand in question is the conditional
average treatment effect τ (x) = µ1 (x) − µ0 (x), which is the expected difference
in potential outcomes under the alternative interventions for the individual in
question. In different fields this quantity is alternatively called the individual
treatment effect, individual causal effect, individual benefit, or individual lift.
If the true conditional mean functions µw (x) are known, the rule (policy) that
assigns each individual xi their optimal treatment is d(x) = argmax µw (x), or,
w∈{0,1}

alternatively, d(x) = I(τ (x) > 0) where I is the indicator function. Generally, the
1 Note that estimating individual treatment effects is not the same as estimating personalized
risks or prognoses with prediction models (e.g. for a heart attack, customer churn, or nonvoting). Prediction models only predict what would happen to the individual given standard
practice, not the difference of what would happen if a treatment were or were not given. As
such, prediction models by themselves are often of little practical utility unless the effects
of available treatments are known and relatively constant. If that is not the case, targeting
treatment to individuals at high-risk for the outcome is not an optimal strategy: there may be
high-risk individuals who do not respond or respond negatively to the treatment, and low-risk
individuals who would respond very positively (3).

2

conditional mean functions µw are unknown, meaning that there is uncertainty
about the individual treatment effect and optimal treatment policy.
There currently exist a number of methods to estimate individual treatment
effects from randomized data. The process of estimating these effects is alternatively referred to as heterogenous effect modeling, uplift modeling, or individual
treatment effect modeling. These approaches can also be used for observational
data if certain assumptions are met or if combined with propensity score or
matching techniques.
A manual subgroup analysis is the traditional approach to heterogenous
treatment effect estimation. A subgroup analysis partitions the population of
individuals into manually-specified subgroups and typically estimates an average
treatment effect in each subgroup using traditional methods (i.e. linear or logistic
regression) (13). This approach requires a high degree of domain knowledge is
prone to multiple-hypothesis testing problems if subgroups are not pre-specified.
An alternative is to use any supervised learning method (e.g. LASSO, random
forest, neural network) to fit functions µ̂0 and µ̂1 that estimate the conditional
means µ0 and µ1 of the potential outcomes. These estimates are then used to
estimate the treatment effect τ̂ (x) = µ̂1 (x) − µ̂0 (x) (14, 7, 27). This can be done
by regressing the observed outcomes on the covariates in the untreated group
to get µ̂0 and regressing the observed outcomes on the covariates in the treated
group to get µ̂1 . Künzel et al. [20] call this approach T-learning (T for “two
models”). Similarly, it is possible to fit a single model µ̂(x, w) and estimate the
treatment effect in the same way as above by letting µ̂w (x) = µ̂(x, w) (S-learning,
for single-model) 20. T-learning and S-learning together have been referred to as
simulated twins, g-computation, counterfactual regression, or conditional mean
regression.
Modeling the conditional means is a valid approach, but many have noted
that since the object of interest is the treatment effect we may be better off
modeling it directly without appeal to the correctness of µ̂0 and µ̂1 . Approaches
in this vein include Zhao et al. [32], Athey et al. [6], Powers et al. [23], and Nie
and Wager [22].
Among the variety of approaches and the number of hyper-parameter settings
within each approach, which is best? As is the case with all statistical learning
problems, there is no context-free way of knowing (31): different methods will
give better or worse estimates depending on the application. Indeed, using a
large set of diverse simulations, Dorie et al. [9] find that the only somewhat
consistent predictor of the success of a causal inference method is its ability to
“flexibly” model the conditional means or treatment effect. Although that result
surely depends upon the particulars of their simulations, it parallels the common
knowledge in the machine learning literature that deep nets and additive regression trees often outperform linear models for real-world applications. However,
even limiting ourselves to flexible treatment effect modeling methods, we are left
with a panoply of approaches and hyper-parameter settings to chose from.
We digress briefly to discuss the standard supervised learning setting where
the task is to estimate y given x by building an estimator µ̂(x). In this setting
we can use the diversity of machine learning approaches to our advantage
3

by performing model selection. Given M modeling approaches and/or hyperparameter settings, we build M estimators {µ̂1 , µ̂2 . . . µ̂m . . . µ̂M }. The quantity
of interest in this case is the expected prediction risk of the model when it is
applied to new data, according to some loss l. We express that as E[l(µ̂m (X), Y )].
The idea of model selection is to estimate this expected risk for each of our
models and find the model that minimizes it. There are several ways to estimate
this risk, including information criteria, but data-splitting is the easiest and
most widely applicable (15, 2, 11). Before fitting the models, the observations
are randomly split into training and validation samples. The models are fit on
the training sample T and evaluated on the validation sample V. The risk of
P|V|
1
each model is estimated with |V|
i∈V l(µ̂m (xi ), yi ). In cross-validation, this
process is repeated round-robin across different random splits of the data and
the estimated risks are averaged per model.
This approach breaks down for treatment effect estimation because the true
treatment effect is never observed in any sample. In this case, the quantity of interest is the τ -risk: E[l(τ̂ , τ )]. We would like to evaluate models {τ̂1 , τ̂2 . . . τ̂m . . . τ̂M }
P|V|
1
by estimating their τ -risk on a validation set via |V|
i∈V l(τ̂m (xi ), τ (xi )) (this
quantity has been called the precision in estimating heterogenous effects or
PEHE by Hill [16]). The problem is that we never observe τ (xi ) directly (we
only see one of the two potential outcomes) and thus have nothing to compare
τ̂ (xi ) to. This estimator of τ -risk is thus infeasible.
Several treatment effect model selection approaches have been suggested
in the literature, but none of them enjoy the wide use and dominance that
prediction error cross-validation has in the supervised learning setting. Most
approaches are not general-purpose in that they require that the set of estimators
{τ̂1 , τ̂2 . . . τ̂m . . . τ̂M } come from a specific class of models. For example, Powers
et al. [23] and Athey and Imbens [5] both use selection methods that are specific
to the models they propose. The Focused Information Criterion (FIC) (8) is a
promising approach, but as of yet cannot be used to select between most machine
learning estimators (17). Alaa et al. [1] propose an empirical Bayes approach for
optimal prior selection.
It is clear that we lack a go-to general-purpose approach for applied researchers
to select among treatment effect models, leaving the door open to poor practice.
Using valid model selection will ensure that better models result from primary
research, making it more certain, for instance, that a patient will benefit from
their treatment or that an advertisement will reach interested parties.
In this work, we summarize several model selection approaches that use an
independent validation set to judge the quality of individual treatment effects
estimated from a training set. Some of these approaches have been explicitly
proposed for model selections- the rest are adapted from model fitting procedures
proposed for individual treatment effect estimation or policy learning. We
implement each of these approaches and test them against each other in a variety
of experimental simulations where the usual assumptions of positivity, SUTVA,
and ignorability hold. An outline of the paper is as follows. In section 2, we
describe approaches for treatment effect model selection and introduce a didactic

4

framework to relate them to each other. Section 3 describes our experiments
and results. We conclude in section 4 with a summary of our contributions and
recommendations for researchers interested in estimating individual treatment
effects.

2

Metrics for treatment effect model selection via
data-splitting

As we have established, we are interested in statistics that, when optimized over
a set of available model predictions on a validation set, also tend to minimize
the τ -risk E[l(τ̂ , τ )]. For the purposes of our discussion, we will focus on risk
under squared error loss. Here we describe three approaches that fit the bill.
The first approach is to minimize the µ-risk E[l(µ̂W (X), Y )]. As we have
seen, this quantity is easy to estimate. Furthermore, a perfect model of the
potential outcomes implies a perfect model of the treatment effect, so we are
justified in optimizing this quantity.
ˆ
An alternative is to maximize the value of the treatment policy d(x)
=
I(τ̂ (x) > 0) which indicates which individuals we expect to benefit from the
ˆ
treatment. The value of a decision policy dˆ is v = E[Y |W = d(X)].
In other
words, the value is the expected outcome of an individual when all individuals
ˆ If larger values of the outcome are more
are treated according to the policy d.
desirable (e.g. lifespan, click-through rate, approval ratings), then the policy
that maximizes the value is optimal, and vice-versa. As we will see, this quantity
is also simple to estimate in a few ways. If all we are interested is the treatment
decision (and not the treatment effect itself), then we are already justified in
maximizing value. However, τ̂ = τ is a maximizer of the decision value v, so
it may be justifiable to use the decision value to optimize for treatment effect
estimation.
The last approach is to directly estimate the τ -risk. We will see that there
are several methods for doing so.

2.1

µ-risk

There are many simple examples where minimizing the mean-squared error
of predicted outcomes badly fails to select the model with the most accurate
treatment effect [24]. Despite this, we can attempt to use prediction error to
select among treatment effect models. Assuming the treatment effect model is
built by regressing the outcomes onto the covariates and treatment to obtain µ̂0
and µ̂1 (e.g.. with an S-learner or T-learner), we can estimate µ-risk with
|V|

X
\= 1
µ-risk
(µ̂wi (xi ) − yi )2
|V|

(1)

i∈V

For individuals in the validation set who were treated (w = 1), we estimate
their outcome using the treated model and assess error, and vice-versa for the
5

untreated. This is equivalent to estimating the predictive risk separately for µ̂1
and µ̂0 .
If treatment assignment is random conditional on observed covariates, we
can appropriately weight each residual with the estimated inverse propensity of
observing an individual xi with treatment wi as suggested by Van der Laan and
Robins [29]
|V|

X (µ̂w (xi ) − yi )2
i
\ IP T W = 1
µ-risk
|V|
p̌wi (xi )

(2)

i∈V

Where pwi (xi ) = P (W = wi |X = xi ). This is the propensity score if wi = 1
and one minus the propensity score if wi = 0. The notation ǎ indicates a quantity
that is estimated using only data in the validation set, whereas â is estimated
using only data in the training set. The effect of this is to create the correct
“pseduo-population” that would have been observed under random assignment.
I.e. if a treated individual xi had a probability of 0.1 of being assigned the
treatment under the observed nonrandom assignment, their residual should be
weighted by a factor of 10 to account for the 9 other individuals who would have
received that treatment had the assignment been random.

2.2

Value

Kapelner et al. [18] and Zhao et al. [33] propose the same validation set estimator
for the value of a treatment effect model:
v̂IP T W =

ˆ i ))
1 X yi I(wi = d(x
|V|
p̌wi (xi )

(3)

V

where again p̌wi (xi ) is an estimate of P (W = wi |X = xi ). We call this the
inverse propensity of treatment weighted (IPTW) value estimator.2
2

We should note that this estimator is closely related to one commonly used in the direct
marketing literature called uplift:
!
P
P
ˆ
ˆ
X
1
V yi d(xi )wi
V yi d(xi )(1 − wi )
ˆ i)
− P
d(x
(4)
P ˆ
ˆ
|V|
d(x
)w
d(x
)(1
−
w
)
i
i
i
i
V
V
V
This is actually a special case of
"
#
ˆ i )wi
ˆ i )(1 − wi )
X yi d(x
1 X yi d(x
ĝ =
−
|V| V
p(xi )
1 − p(xi )
V

(5)

To see this, we rewrite equation 4 as:
P ˆ
P ˆ
X
X
1
V d(xi )
V d(xi )
ˆ i )wi − 1 P
ˆ i )(1 − wi )
yi d(x
yi d(x
P ˆ
ˆ
|V|
|V|
V d(xi )wi V
V d(xi )(1 − wi ) V
|
{z
}
|
{z
}
1/p̂

1/(1−p̂)

The multipliers underbraced above are unbiased estimates of 1/pwi because of the conditional
ˆ
independence of d(X)
and W . Thus the traditional estimator (equation 4) is suitable for use
when the propensity score p(x) = p is a constant, as is the case in randomized experiments.

6

In the randomized setting where pwi (xi ) = 0.5, we can imagine that two sideby-side experiments were run, one in which treatments were assigned according
ˆ
to the model (W = d(X))
and one in which they were assigned according to the
ˆ
opposite recommendation (W = 1 − d(X)).
The data in the validation set are a
concatenation of the data from these two experiments. To estimate the value
of our model, we average the outcomes of individuals in the first experiment
and ignore the data from the second experiment. This is essentially what the
estimator in equation 3 is doing. When pwi (xi ) 6= 0.5, we must appropriately
weigh the outcomes according to the probability of treatment to accomplish the
same goal. Kapelner et al. [18] give a similar explanation, but omit the role of
the propensity score. Zhao et al. [33] provide a short proof that v̂ is unbiased
ˆ
for the true value v = E[Y |W = d(X)].
A problem with this estimator is that it depends on the correctness of the
propensity model. In addition, it only utilizes a portion of the data: v̂IP T W
ˆ i ). In the spirit
throws away individuals whose treatments do not match d(x
of Dudík et al. [10], Athey et al. [4] overcome this by using a doubly-robust
formulation

v̂DR



1 Xˆ
yi − µ̌wi (xi )
=
d(xi ) µ̌1 (xi ) − µ̌0 (xi ) + (2wi − 1)
|V|
p̌wi (xi )

(6)

V

where µ̌wi (xi ) and p̌(xi ) can be estimated with standard regression methods
using data in the validation set. Athey et al. [4] use an estimator of this form in
order to fit a policy model and establish theoretical gaurentees, whereas here we
will use it to select among several pre-fit models.

2.3

τ -risk

P|V|
1
2
We have already seen that |V|
i∈V (τ̂m (xi ) − τ (xi )) is infeasible because τ (xi )
is never observed directly. A natural workaround is to replace τ (xi ) with an
To see the relationship between uplift and value, note that
E[ĝ|X = x]
E[v̂|X = x]

=
=
=
=

ˆ
E[τ (x)d(x)|X
= x]
ˆ
(µ1 (x) − µ0 (x))d(x)
ˆ
E[Y |W = d(x),
X = x]
ˆ
ˆ
µ0 (x)(1 − d(x))
+ µ1 (x)d(x)

Consider two policies dˆa and dˆb and their respective estimated values v̂a , v̂b and gains ĝa , ĝb .
The expected difference in value between the two models is
E[v̂a − v̂b ]

=
=
=
=
=

E[E[v̂
h a |X] − E[v̂b |X]]
i
E µ0 (X)(1 − dˆa (X)) + µ1 (X)dˆa (X) − µ0 (X)(1 − dˆb (X)) − µ1 (X)dˆb (X)
h
i
E dˆa (X)(µ1 (X) − µ0 (X)) − dˆb (X)(µ1 (X) − µ0 (X))
E [E[ĝa |X]) − E[ĝb |X])]
E [ĝa − ĝb ]

Thus a model optimizing any unbiased estimate of uplift also optimizes any unbiased estimate
of value in expectation.

7

estimate derived from the validation set:
|V|

1 X
(τ̂ (xi ) − τ̌i )2
|V|
i∈V

Here, τ̌ is a plug-in estimate of τ estimated using data in the validation set
V.
Rolling and Yang [24] propose an estimator τ̌i based on matched treated
and control individuals in the validation set. Briefly, for each individual i in
the validation set they use Mahalanobis distance matching to identify the most
similar individual ī in the validation set with the opposite treatment (wi 6= wī )
and compute τ̌i = (2wi − 1)(yi − yī ) as the plug-in estimate of τ (xi ).
|V|

1 X
τ\
-riskmatch =
(τ̂ (xi ) − (2wi − 1)(yi − yī ))2
|V|

(7)

i∈V

They prove under general assumptions and a squared-error loss that a more
mathematically tractable version of their algorithm has selection consistency,
meaning that it correctly selects the best model as the number of individuals
goes to infinity. They conjecture that the practical version of the algorithm
retains this property.
A downside of this approach are that Mahalanobis matching scales relatively
poorly and matches become difficult to find in high-dimensional covariate spaces.
An alternative proposed by Gutierrez and Gerardy [14] takes advantage of the
−1)Y
fact that the IPTW-weighted (transformed) outcome (2W
pW (X) is an estimator
for τ :
2
|V| 
1 X
(2wi − 1)yi
\
τ -riskIP T W =
τ̂ (xi ) −
|V|
p̌wi (xi )

(8)

i∈V

This formulation is also used for model fitting in the transformed-outcome
forest of Powers et al. [23] and in some versions of the causal tree in Athey and
Imbens [5].
Our final approach deviates from this schema and is due to Nie and Wager
[22], who propose minimizing
|V|

1 X
τ\
-riskR =
((yi − m̌(xi )) − (wi − p̌(xi ))τ̂ (xi ))2
|V|

(9)

i∈V

The function m̌(x) is an estimate of E[Y |X] which can be obtained by
regressing Y onto X without using the treatment W . Nie and Wager [22]
provide theoretical and empirical results that show how fitting models using an
objective of this form (with some additional stipulations) can outperform T- and
S-learning. We propose using this same construction to select among models fit
by arbitrary means.

8

3
3.1

Experiments
Overview

We demonstrate the utility of these approaches using simulations. Each simulation is defined by a data-generating process with a known effect function, which
allows us to compute true test set errors. Each run of each simulation generates
a dataset, which we split into training, validation, and test samples. We use
the training data to estimate M different treatment effect functions τ̂m using
M different algorithms (e.g. S-learning with gradient boosted trees). For each
\ v̂IP T W , τ\
of those we calculate each validation metric (e.g. µ-risk,
-riskR ) using
the data in validation set. The models selected by optimizing each validation-set
metric are then used to estimate treatment effects on the test set. The test-set
treatment effect estimates of each model are compared to the known effects to
calculate the true cost of using each metric for model selection. Each simulation
is repeated multiple times. All of the code used to set up, run, and analyze the
simulations is feely available on github.
3.1.1

Data-generating processes and sampling

We use the sixteen simulations from Powers et al. [23], each of which we repeat
100 times. The data-generating process in each simulation all satisfy the usual
assumptions made about ignorability, SUTVA, and positivity, but vary in the
amount of nonlinearity in the conditional mean functions and signal-to-noise
ratio. Details may be found in Powers et al. [23].
In each repetition of each simulation, 1000 samples are used for training (T ),
1000 for validation (V), and 1000 for testing (S). Let the data be denoted by
{y, w, x} = {[y1 . . . yn ]T , [w1 . . . wn ]T , [x1 . . . xn ]T } where n = |T |+|V|+|S|. Let
y (A) represent [yi |i ∈ A]. Let the set of treated individuals be W1 = {i|wi = 1}
and let the set of untreated individuals be W0 = {i|wi = 0}. In a slight abuse of
notation, let f (x) = [f (xi ) . . . f (xn )].
3.1.2

Learning Algorithms

For each simulated dataset, we use the training sample to estimate M different treatment effect functions τ̂m using M different algorithms. The learning
algorithms we use here are defined by a unique combination of a meta-learning
approach (S-, T-, or R-) [20, 22], a learning algorithm (e.g. elastic net or gradient
boosted trees), and a set of hyperparameter values for that learning algorithm.
This provides us with a broad set of estimated functions to select among. It
would also be possible to use other estimators (e.g. causal forests or causal boosting) with varying hyperparameter values to estimate individual treatment effect
functions, but in this work we restrict ourselves to meta-learning approaches
because they can be used off-the-shelf to accommodate a large variety of machine
learning algorithms.

9

S-learners In the S-learning framework, a single model µ̂(x, w) is fit by regressing y (T ) onto [x(T ) , z (T ) ] to produce µ̂(x, w). The term z (T ) is determined
by zi = (wi − 0.5)xi and ensures that the treatment effect is not implicitly
regularized [22]. The treatment effect is calculated as τ̂ (x) = µ̂(x, 1) − µ̂(x, 0).
The learning algorithms we use to fit µ̂ are gradient boosted trees (number
of trees ranging from 1 to 500, tree depth of 3, shrinkage of 0.2 and minimum
3 individuals per node) and elastic nets (α = 0.5, λ ∈ [e−5 , e2 ]). These models
give us a range of high-performing linear and nonlinear models to select among.
We estimate a treatment effect model τ̂m (x) for each combination of algorithm
and hyperparameters.
T-learners A T-learner is fit by separately regressing y (T ∩W0 ) onto x(T ∩W0 )
to estimate µ̂0 (x) and y (T ∩W1 ) onto x(T ∩W1 ) to estimate µ̂1 (x). The treatment
effect is calculated as τ̂ (x) = µ̂1 (x) − µ̂0 (x).
We use the same algorithms and hyperparameters as above to fit the models
µ̂w (x). When estimating the various treatment effect models τ̂m (x), we only
consider combinations of models µ̂1 and µ̂0 that were fit using the same algorithm
with the same hyperparameters. This increases computational efficiency, but
need not be done in practice (i.e. µ̂0 could be fit using a linear model and µ̂1
fit using a random forest). It is an appropriate simplification to make in our
experiments since our focus is on model selection and not model fitting.
R-learners In the R-learning framework of Nie and Wager [22], treatment
effect models are estimated by minimizing
|T |

1 X
((yi − m̂(xi )) − (wi − p̂(xi ))t(xi ))2
|T |

(10)

i∈T

over a space of candidate models t(x). Given m̂(x) and p̂(x), this is equivalent
i)
to a weighted least-squares problem with a pseudo-outcome of ywii−−m̂(x
p̂(xi ) and
weights of (wi − p̂(xi ))2 . As such, it can be solved using a variety of learning
algorithms.
In our experiments, we estimate the quantities m̂(x(T ) ) and p̂(x(T ) ) once
per simulated dataset using cross-validated cross-estimation over the training set
[22, 30]. The internal cross-validation is run over estimates derived from the same
combinations of algorithms and hyperpameters as used by the S- and T-learners.
These estimates are then fixed and used for all R-learners. Each R-learner τ̂m (x)
is produced by minimizing equation 10, again using each combination m of
learning algorithm and hyperparameter values.
3.1.3

Model selection metrics

The following metrics are used to select among models in each simulation:

10

Metric
Random
\
µ-risk

Equation
NA

Reference
NA

1

NA

\ IP T W
µ-risk

2

Van der Laan and Robins [29]

v̂IP T W

3

Zhao et al. [33]

v̂DR

6

Athey et al. [4]

τ\
-riskmatch

7

Rolling and Yang [24]

τ\
-riskIP T W

8

Gutierrez and Gerardy [14]

τ\
-riskR

9

Nie and Wager [22]

Taking the model that minimizes (or maximizes, when appropriate) one of
these metrics defines a model selection approach.
The “random” approach selects a model uniformly at random from the
available models.
Several of these metrics require estimates p̌(x(V) ), µ̌w (x(V) ), or m̌(x(V) ).
In our experiments, we estimate each of these quantities using cross-validated
cross-estimation over the validation set alone. The internal cross-validation
is run over estimates derived from the same combinations of algorithms and
hyperpameters as used by the treatment effect learners.
3.1.4

Evaluation metrics

Let the model τ̂m selected by optimizing metric h be written as τ̂ ∗h .
We are interested in the quantities
τ -riskh = E[(τ̂ ∗h (X) − τ (X))2 ]
and
vh = E[Y |W = dˆ∗h (X)]
which we unbiasedly estimate in a large test set S via
(S)

τ -riskh

=

1 X ∗h
(τ̂ (xi ) − τ (xi ))2
|S|

(11)

i∈S

and
(S)

vh

=

1 X
µdˆ∗h (xi ) (xi )
|S|

(12)

i∈S

Where dˆ∗h (xi ) = I(τ̂ ∗h (xi ) > 0) as before.
(S)
τ -riskh calculates how well the selected model estimates the treatment effect
for individuals in the test set. v (S) is the decision value of applying the treatment
ˆ
policy d(x)
derived from each selected model to the individuals in the test set.
11

These are both useful metrics, although only the first (τ -risk), sometimes
called “precision in estimating heteorgenous effects”, or PEHE) has typically
been used in simulation studies in the individual effect estimation literature
while v (S) is used in the policy learning literature. To see why they are both
important, consider two models (A and B) that estimate the same treatment
effect for all individuals, except for two individuals (i = 1 and i = 2). Let
τ (x1 ) = τ (x2 ) = 0.1, i.e. both individuals would benefit from the treatment
in reality. Model A estimates τ̂A (x1 ) = −0.1 and τ̂A (x2 ) = 0.1. In other
words, it incorrectly suggests not treating individual 1, although the absolute
difference |τ̂A (x1 ) − τ (x1 )| = 0.2 is quite small, so it is not heavily penalized
according to τ -risk. Model B estimates τ̂B (x1 ) = 0.1 and τ̂B (x2 ) = 100. Model B
correctly suggests the treatment for both individuals, but the absolute difference
|τ̂B (x2 ) − τ (x2 )| = 99.9 is large and is heavily penalized by τ -risk. Often, what
we want is a model that correctly assigns treatment to the individuals who stand
to benefit from it. Using τ -risk in this case would favor model A even though
it leads to the mistreatment of more individuals than model B does. However,
τ -risk is still a useful metric. There may be cases where a researcher is interested
in the precise magnitude of the effect for each individual, perhaps so that scarce
resources can be allocated most effectively.

3.2

Results

The results in tables 1 and 2 show that τ\
-riskR is the metric that most consistently selects models with low τ -risk and high value. This is especially true
when treatment assignment is randomized, but also to a large extent when the
assignment is biased. In the simulations where other model selection approaches
\ and µ-risk
\ IP T W perform
win out, it is typically by a small margin. Both µ-risk
well (the two are identical in randomized settings). Even when the goal is to
optimize value, selecting on the basis of these metrics leads to better performance
than using v̂IP T W or v̂DR . Scenarios 1 and 9 have zero treatment effect for all
individuals, which is why columns 1 and 9 in table 2 are identical: all policies
will lead to the same outcomes for all patients. Figure 2 shows the results from
simulation 16 in greater detail.

4

Conclusion

Although prediction error cross-validation is widely used to select between
predictive models, there is no consensus on how to perform model selection
for individual treatment effects models. We use simulations to examine the
performance of several proposed approaches and our own adaptations of methods
that have been previously used for model fitting, but not model selection.
Our results show that τ\
-riskR is the validation set metric that, when optimized,
most consistently leads to the selection of a high-performing model. This
conclusion strengthens the claims of Nie and Wager [22] and extends the utility

12

Figure 1: A visual representation of our experiments. Each row in the top grid
represents one learning algorithm. Each column is one of the data-generating
processes (DGPs). Each cell in that grid thus represents a fit function τ̂m,DGP (x)
obtained by using that meta-learner, learning algorithm, and hyperparameter
values on a training sample T from that DGP. The colored cells represent the
models selected by optimizing each metric in table 3.1.3 using the validation set
V. Different colors represent different the different metrics. The models chosen
via each metric in each DGP are gathered together (bottom grid) and used to
estimate the individual treatment effect on a test-set S which we use to assess
the true generalization error τ -risk(S) (and policy value v (S) ) attained by using
each model selection metric. The entire process is repeated and the reported
results are averages across repetitions.

13

Figure 2: Validation-set and test-set metrics for all treatment effect models,
averaged over all replications of simulation 16 (equivalent plots for other simulations show similar patterns). Each point is a single model resulting from
a unique combination of meta-learner (S, T, or R), learning algorithm, and
hyperparameters. The x-axis facets are the values of τ -risk(S) and −v (S) for
each model (lower values indicating higher performance). The y-axis facets are
the model selection metrics for each model as estimated on the validation set
(lower values indicating higher predicted performance). High correlation between
a validation-set and test-set metric indicates good performance of the model
selection metric.
14

Table 1: τ -risk(S) . True test-set τ -risk of the treatment effect model selected
according to each metric (rows) in each simulation (columns), averaged across
replications. Simulations 9-16 use the same data-generating functions as 1-8,
but with nonrandom treatment assignment. Smaller numbers indicate better
performance.
metric
Random
\
µ-risk
\ IP T W
µ-risk
v̂IP T W
v̂DR
τ\
-riskmatch
\
τ -riskIP T W
τ\
-riskR

1
0.102
0.007
0.007
0.130
0.052
0.013
0.056
0.008

2
2.684
0.235
0.235
0.634
0.969
0.542
0.101
0.059

3
2.223
0.014
0.014
4.278
8.458
0.964
0.050
0.017

4
1.718
0.808
0.808
0.690
0.785
0.068
0.154
0.035

5
1.233
0.212
0.212
0.738
4.466
0.260
0.288
0.043

6
2.845
0.963
0.963
0.887
0.972
0.970
0.786
0.786

7
5.859
2.970
2.970
4.300
5.759
3.681
2.913
2.794

8
2.677
1.738
1.738
1.513
2.577
0.815
0.746
0.736

metric
Random
\
µ-risk
\ IP T W
µ-risk
v̂IP T W
v̂DR
τ\
-riskmatch
\
τ -riskIP T W
τ\
-riskR

9
0.401
0.012
0.013
0.822
0.146
0.400
1.049
0.008

10
3.178
0.290
0.288
1.290
1.169
1.617
0.451
0.348

11
61.830
0.020
0.040
4.542
5.678
4.400
2.387
1.986

12
4.143
0.797
0.782
1.677
1.821
1.769
1.129
0.149

13
4.173
0.055
0.060
5.247
26.571
9.399
4.260
0.078

14
3.019
1.277
1.250
1.274
1.356
1.425
1.120
1.169

15
8.899
3.900
4.050
6.174
7.340
4.284
4.133
3.923

16
4.235
2.495
2.277
2.431
2.668
1.661
2.123
1.539

of their framework to a model selection setting where treatment effects models
may be fit by any algorithm.
Figure 2 shows that all of the estimators of τ -risk are biased upwards (i.e. they
overestimate the risk). An explanation of that phenomenon for τ\
-riskIP T W can
-riskmatch if
be found in Gutierrez and Gerardy [14]. Their argument extends to τ\
the matching treatment effect estimate (2wi − 1)(yi − yī ) is unbiased. Regardless,
for the purposes of model selection, the relevant quantity is the difference in
estimates for different models and so this bias is of less importance. Figure 2
shows good correlation between τ -risk estimated on the validation set according
to various methods and the true test-set τ -risk for each model.
Interestingly, our results also show that model selection on the basis of v̂IP T W
or v̂DR is generally suboptimal, even when the goal is to optimize v (S) . This is
likely because these metrics are in a sense “coarser” than the other metrics we
consider, effectively turning a regression problem into a classification problem.
However, figure 2 does show that v̂IP T W and v̂DR have low empirical bias for
v (S) , as they should when standard assumptions of unconfoundedness are met.
15

Table 2: v (S) . True test-set value of the decision rule derived from the treatment
effect model selected according to each metric (rows) in each simulation (columns),
averaged across replications. Simulations 9-16 use the same data-generating
functions as 1-8, but with nonrandom treatment assignment. Larger numbers
indicate better performance.
metric
Random
\
µ-risk
\ IP T W
µ-risk
v̂IP T W
v̂DR
τ\
-riskmatch
\
τ -riskIP T W
τ\
-riskR

1
0.008
0.008
0.008
0.008
0.008
0.008
0.008
0.008

2
0.501
0.795
0.795
0.798
0.770
0.783
0.806
0.809

3
1.914
1.998
1.998
1.989
1.978
1.998
1.997
1.998

4
0.791
0.966
0.966
0.969
0.969
0.984
0.979
0.986

5
0.771
0.906
0.906
0.877
0.486
0.903
0.890
0.907

6
0.446
0.663
0.663
0.678
0.667
0.671
0.678
0.678

7
0.138
0.642
0.642
0.651
0.354
0.505
0.672
0.687

8
0.685
0.835
0.835
0.842
0.784
0.881
0.884
0.883

metric
Random
\
µ-risk
\ IP T W
µ-risk
v̂IP T W
v̂DR
τ\
-riskmatch
τ\
-riskIP T W
\
τ -riskR

9
-0.011
-0.011
-0.011
-0.011
-0.011
-0.011
-0.011
-0.011

10
0.407
0.762
0.761
0.721
0.703
0.494
0.740
0.777

11
1.852
1.993
1.993
1.923
1.969
1.960
1.966
1.983

12
0.505
0.945
0.945
0.881
0.945
0.861
0.921
0.995

13
0.680
0.906
0.906
0.562
0.142
0.126
0.598
0.904

14
0.421
0.653
0.653
0.656
0.654
0.647
0.653
0.655

15
0.157
0.532
0.505
0.593
0.177
0.481
0.579
0.547

16
0.586
0.709
0.725
0.751
0.671
0.790
0.786
0.806

Thus, unlike estimators of τ -risk, it is appropriate to use these estimators to
gauge the value of the final treatment decision policy created by thresholding a
treatment effect model.
The primary limitation of our work is that it relies on simulations. This is a
(S)
necessity because τ -riskh and v (S) cannot be calculated from real data. While
no set of simulations can mimic the full range of real-world data-generating
processes, our experiments span a range of linear and nonlinear potential outcome
functions, high- and low-noise settings, and levels of bias in treatment assignment.
To conclude, we advocate for the use of τ\
-riskR as a model selection metric
for individual treatment effects models. Researchers estimating heterogenous
treatment effects need not limit themselves to a single model-fitting algorithm.
There are many cases in our simulations where models fit via an R-learner are
outperformed by models fit via a T-learner, or where using the elastic net confers
an advantage over using gradient boosted trees, and vice-versa. Instead of relying
on a single method, multiple models fit by a diverse set of algorithms should be
evaluated against each other using τ\
-riskR as estimated on a validation set. The
16

best performing model should be used for estimating the individual treatment
effect for future individuals.

References
[1] A M Alaa, M van der Schaar arXiv preprint arXiv 1712.08914, and 2017.
Bayesian Nonparametric Causal Inference: Information Rates and Learning
Algorithms. arxiv.org.
[2] Sylvain Arlot and Alain Celisse. A survey of cross-validation procedures for
model selection. Statistics Surveys, 4(0):40–79, 2010.
[3] Eva Ascarza. Retention Futility: Targeting High-Risk Customers Might Be
Ineffective. Journal of Marketing Research, 55(1):80–98, February 2018.
[4] S Athey, S Wager arXiv preprint arXiv 1702.02896, and 2017. Efficient
policy learning. arxiv.org.
[5] Susan Athey and Guido Imbens. Recursive Partitioning for Heterogeneous
Causal Effects. 2015.
[6] Susan Athey, Julie Tibshirani, and Stefan Wager. Generalized Random
Forests. arXiv.org, October 2016.
[7] Peter C Austin. Using Ensemble-Based Methods for Directly Estimating
Causal Effects: An Investigation of Tree-Based G-Computation. Multivariate
Behavioral Research, 47(1):115–135, February 2012.
[8] Gerda Claeskens and Nils Lid Hjort. The Focused Information Criterion.
Journal of the American Statistical Association, 98(464):900–916, December
2003.
[9] Vincent Dorie, Jennifer Hill, Uri Shalit, Marc Scott, and Dan Cervone.
Automated versus do-it-yourself methods for causal inference: Lessons
learned from a data analysis competition. arXiv.org, July 2017.
[10] M Dudík, J Langford, L Li arXiv preprint arXiv 1103.4601, and 2011.
Doubly robust policy evaluation and learning. arxiv.org.
[11] Sandrine Dudoit and Mark J van der Laan. Asymptotics of cross-validated
risk estimation in estimator selection and performance assessment. Statistical
Methodology, 2(2):131–154, 2005.
[12] João Pedro Ferreira, John Gregson, Kévin Duarte, François Gueyffier,
Patrick Rossignol, Faiez Zannad, and Stuart Pocock. Individualizing treatment choices in the systolic blood pressure intervention trial. Journal of
Hypertension, 36(2):428–435, August 2017.
[13] M Gail and R Simon. Testing for Qualitative Interactions between Treatment
Effects and Patient Subsets. Biometrics, 41(2):361, 1985.
17

[14] P Gutierrez and J Y Gerardy. Causal Inference and Uplift Modelling: A
Review of the Literature. proceedings.mlr.press, 2016.
[15] Trevor Hastie, Robert Tibshirani, and Jerome Friedman. 7. Model Assessment and Selection. In The Elements of Statistical Learning, pages 1–42.
Springer New York, New York, NY, 2009.
[16] Jennifer L Hill. Bayesian Nonparametric Modeling for Causal Inference.
Journal of Computational and Graphical Statistics, 20(1):217–240, January
2011.
[17] M Jullum. Focused Information criteria for selecting among parametric and
nonparametric models. 2012.
[18] Adam Kapelner, Justin Bleich, Alina Levine, Zachary D Cohen, Robert J
DeRubeis, and Richard Berk. Inference for the Effectiveness of Personalized
Medicine with Software. arXiv.org, April 2014.
[19] Richard L Kravitz, Naihua Duan, and Joel Braslow. Evidence-based
medicine, heterogeneity of treatment effects, and the trouble with averages. The Milbank quarterly, 82(4):661–687, 2004.
[20] Sören R Künzel, Jasjeet S Sekhon, Peter J Bickel, and Bin Yu. Meta-learners
for Estimating Heterogeneous Treatment Effects using Machine Learning.
arXiv.org, June 2017.
[21] S C Matz, M Kosinski, G Nave, and D J Stillwell. Psychological targeting as
an effective approach to digital mass persuasion. Proceedings of the National
Academy of Sciences, 114(48):12714–12719, November 2017.
[22] Xinkun Nie and Stefan Wager. Learning Objectives for Treatment Effect
Estimation. arXiv.org, December 2017.
[23] Scott Powers, Junyang Qian, Kenneth Jung, Alejandro Schuler, Nigam H
Shah, Trevor Hastie, and Robert Tibshirani. Some methods for heterogeneous treatment effect estimation in high-dimensions. arXiv.org, June
2017.
[24] Craig A Rolling and Yuhong Yang. Model selection for estimating treatment effects. Journal of the Royal Statistical Society: Series B (Statistical
Methodology), 76(4):749–769, 2013.
[25] Donald B Rubin. Causal Inference Using Potential Outcomes. Journal of
the American Statistical Association, 100(469):322–331, March 2005.
[26] J B Segal, C Weiss, R Varadhan - Center for Medical . . . , and 2012.
Understanding heterogeneity of treatment effects in pragmatic trials with
an example of a large, simple trial of a drug treatment for osteoporosis.
White Paper. pdfs.semanticscholar.org.

18

[27] Jonathan M Snowden, Sherri Rose, and Kathleen M Mortimer. Implementation of G-computation on a simulated data set: demonstration of a causal
inference technique. American Journal of Epidemiology, 173(7):731–738,
April 2011.
[28] Elizabeth A Stuart, Catherine P Bradshaw, and Philip J Leaf. Assessing
the Generalizability of Randomized Trial Results to Target Populations.
Prevention Science, 16(3):475–485, October 2014.
[29] M J Van der Laan and J M Robins. Unified methods for censored longitudinal
data and causality. Springer New York, New York, NY, 2003.
[30] Stefan Wager, Wenfei Du, Jonathan Taylor, and Robert J Tibshirani. Highdimensional regression adjustments in randomized experiments. Proceedings
of the National Academy of Sciences of the United States of America, 113
(45):12673–12678, October 2016.
[31] David H Wolpert. The Lack of A Priori Distinctions Between Learning
Algorithms. Neural Computation, 8(7):1341–1390, 1996.
[32] Yan Zhao, Xiao Fang, and David Simchi-Levi. A Practically Competitive and
Provably Consistent Algorithm for Uplift Modeling. arXiv.org, September
2017.
[33] Yan Zhao, Xiao Fang, and David Simchi-Levi. Uplift modeling with multiple treatments and general response types. In Proceedings of the 17th
SIAM International Conference on Data Mining, SDM 2017, pages 588–596.
Massachusetts Institute of Technology, Cambridge, United States, January
2017.

19

