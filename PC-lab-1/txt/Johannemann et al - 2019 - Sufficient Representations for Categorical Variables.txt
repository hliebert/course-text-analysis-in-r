arXiv:1908.09874v1 [stat.ML] 26 Aug 2019

Sufficient Representations for Categorical Variables
Jonathan Johannemann
jonjoh@stanford.edu

Vitor Hadad
vitorh@stanford.edu

Susan Athey
athey@stanford.edu

Stefan Wager
swager@stanford.edu

Stanford University
Abstract
Many learning algorithms require categorical data to be transformed into real vectors
before it can be used as input. Often, categorical variables are encoded as one-hot or
dummy vectors. However, this mode of representation can be wasteful since it adds
many low-signal regressors, especially when the number of unique categories is large.
In this paper, we investigate simple alternative solutions for universally consistent
estimators that rely on lower-dimensional real-valued representations of categorical
variables that are sufficient in the sense that no predictive information is lost. We then
compare preexisting and proposed methods on simulated and observational datasets.

1

Introduction

Many regression problems involve data collected from a number groups that may be statistically relevant. For example, in a medical setting, we may want to model health outcomes
using data on patients from several hospitals and acknowledge that different hospitals may
have idiosyncratic effects on patients that are not explained by other covariates. Similar
considerations arise when working with data on students from different schools, voters from
different zip-codes, employees at different firms, etc.
One of the most wide-spread approaches to this problem is via fixed effect modeling, as
follows. Suppose that we observe n samples (Xi , Gi , Yi ) for i = 1, ..., n, where Xi ∈ Rp
is a set of subject-specific covariates, Gi ∈ G is a categorial variable that records group
membership and Yi ∈ R is the response of interest, and want to estimate


µ(x, g) = E Yi Xi = x, Gi = g .
(1)
Then, the simple fixed effects approach starts by positing a model
µ(x, g) = αg + xβ,

(2)

and then estimating the coefficients β and αg via ordinary least squares regression. More
sophisticated extensions of this approach may involve considering non-linear transformations
of x, interactions between group membership and the covariates x, and/or regularization
[Angrist and Pischke, 2008, Diggle et al., 2002, Wooldridge, 2010].

1

Xi

Li

Yi

Gi

Figure 1: Causal graph depicting the key assumption that Yi and Xi are independent of
group membership Gi conditionally on latent state Li . The grayed-out nodes are observed.
Fixed effects modeling, however, does not always perform well with complex non-linear
signals or when the number of groups |G| is large. The model (2) is quite rigid and may not
be able to represent rich signals while, at the same time, the large number of αg parameters
in the model (2) may result in problems for statistical inference [Neyman and Scott, 1948].
In other words, the model (2) may have too many parameters to be stable all while lacking
the degrees of freedom to fit the signal well.
The goal of this paper is to develop a more parsimonious approach for representing group
membership to avoid the above problems. Specifically, we seek a mapping ψ that embeds
group membership Gi into a k-dimensional space without losing any predictive information,
i.e.,
ψ : G → Rk , µ(x, g) = f (x, ψ(g)),
(3)
such that k is small (in particular, k  |G|) and the function f (·, ·) is still easy to learn.
Given such a mapping, the problem (1) becomes a routine regression problem with (p +
k)-dimensional real-valued features (Xi , ψ(Gi )), and we can use out-of-the-box statistical
learning software on it.
In order to obtain a useful representation of group membership Gi , we of course need
to assume something about the relationship between Gi and the target outcome Yi . The
core assumption made in this paper is what we call the sufficient latent state assumption
depicted in Figure 1: group membership Gi has no direct causal effect on Yi , but may be
associated with latent variables Li that do have a direct effect on Yi . For example, in the
case of patients spread across hospitals, we assume that hospitals themselves do not directly
cause health outcomes Yi ; however, hospitals may still be predictive of Yi through their
association with latent causal variables. Patients may have unobserved characteristics, e.g.,
severity of disease or socioeconomic resources, that both affect Yi and lead the patient to
self-select into different hospitals. Our main result is that, under this sufficient latent state
assumption, practical representations of the form (3) exist and can be learned from data.
Our paper is structured as follows. We begin by reviewing similar problem settings in the
fixed effects literature and the drawbacks of using existing methods in 1.1. In Section 2, we
introduce the primary lemma which seeks to describe the true information we wish to extract
from categorical variables. In Section 3, we expand on lemma 1 to develop methods that
utilize this insight. In Sections 4 and 5, we run simulated and observational experiments
with our proposed methods and follow up with discussion on how realized performance

2

compared to our expectations.

1.1

Related Work

The principle of representing high-cardinality categorical variables as real-valued vectors
has played an important role in many different areas. For example, in econometrics the
categories often represent groups the individual observations belong to (such as classroom
cohorts or a region of the country) or are identified by (such as the individual identifier in
longitudinal data).
In econometrics, the approach we propose here is perhaps most closely related to the one
presented in Bonhomme and Manresa [2015] where individual time series belong to discrete
clusters and we have only one fixed effect per cluster (rather than one per time series).
Bonhomme and Manresa [2015] then fit this model via a k-means like algorithm that alternates clustering and estimation with per-cluster fixed effects.1 Furthermore, Arkhangelsky
and Imbens [2018] deal with misspecification using a propensity score-weighted estimator
that uses nonlinear modeling and adjusts for group differences via group sufficient statistics. The combination of flexible conditional mean modeling and balancing methods yields
a doubly-robust estimator of the treatment effect. In recent work, Wang and Blei [2019]
propose a multi-step procedure in which the researcher first learns a latent factor model
that represents confounding variables, then predicts its value for each individual, and finally
uses the predicted value as a substitute for unobserved confounders.
In natural language processing, it is common to start more complex analyses with a preprocessing step that represent words as vectors that capture the way in which those words
are used in context [Mikolov et al., 2013, Pennington et al., 2014]. Meanwhile, Cerda et al.
[2018] recently consider a related problem of representing “dirty” categorical variables that
might arise if, e.g., several categorical levels are just misspellings of each other, and propose
using a low-dimensional embedding that exploits lexicographic similarity (i.e., factors with
similar spellings are arranged close to each other). In this paper, we use information in
the Xi , rather than lexicographic information, to construct an embedding; however, the
high-level conclusion that we can achieve meaningful gains by using auxiliary information
to embed categorical variables in a low-rank space remains. Also, [Rahimi and Recht, 2008]
proposes randomly projecting a one-hot representation of the categorical variables into Rk
for relatively small k.
In the broader machine learning literature, the discussion of how to best account for
group membership Gi in a non-parametric regression has focused on different ways to encode
Gi that can be given as an input to statistical software. One simple way to do so is via
one-hot encoding: ι : G → {0, 1}M such that the j-th entry of ι(g) is 1 if and only if g
corresponds to the j-th element in G, and where M := |G|. Note that linear regression on
one-hot encoded features (Xi , ι(Gi )) exactly recovers the standard fixed effects model (2).
As discussed above, however, one-hot encoding may lead to undesirably high-dimensional
problems when M := |G| is large.2 In the Appendix (6.2), we present multiple encoding
1 Our approach is not directly comparable to either of these methods, as we do not focus on textual
data, and do not assume that the latent state Li can be consistently estimated (in contrast, Bonhomme
and Manresa [2015] assume that they have access to long enough time series that their clustering step is
consistent which, in our setting, would be equivalent to assuming that Li can be recovered).
2 Another slightly more subtle difficulty is that when the categorical variable has many levels, the individual features ι(Gi )j become very sparse (i.e., they are usually 0 and only very rarely 1). Many approaches
to statistical learning work better with features whose variance roughly captures their range than with such
spiky features.

3

methods that similarly project the categories onto RM . These methods do not utilize information from the covariates Xi or response Yi and suffer from the same pitfalls that come
with high dimensional representation of the observed groups G. The primary difference for
these methods are the user’s interpretation of the encoded variables which are commonly
constructed as the comparison of the mean effect of a subset G 0 ∈ G relative to the mean
effect of the set G\G 0 or one of its subsets.
The problem of fixed effects is especially challenging with sparsity-seeking methods such
as the lasso [Hastie et al., 2015] or decision trees [Breiman et al., 1984], and related ensemble
methods such as random forests [Breiman, 2001] or gradient-boosted trees [Friedman, 2001].
Sparsity-seeking methods will set the contribution of features to zero unless there is strong
evidence that those features matter for prediction, and it is difficult for rare levels of Gi to
produce sufficient evidence to get a non-zero contribution to the model via their one-hot
features. The end result is that sparsity seeking methods may largely ignore high-cardinality
one-hot encoded factors.
Another prevalent way of working with categorical variables and decision trees is to
consider full factorial splits that allow for arbitrary grouping of the levels of the categorical
variable. For a variable with M := |G| levels, this allows for 2M −1 − 1 potential splits.
Breiman et al. [1984] showed that we can optimize over this exponential set of potential
splits in time that scales linearly in M ; however, from a statistical point of view, such
factorial splits are prone to very strong overfitting when the number of levels is large.

2

Representing Groups with Sufficient Latent State

Our sufficient latent state assumption presented in the introduction and depicted in the
causal graph 1 implies that the distribution of the outcome Yi only depends on the observable factor Gi through some unobservable latent variable Li . In other words, if we knew
the value of Li , then also knowing Gi would give us no additional information about the
outcome. For a simple example, one may posit that a patient’s underlying health status
(Li ∈ {good, poor}) may simultaneously determine to which hospital they are admitted
(Gi ), what symptoms (Xi ) they exhibit, and what health outcomes outcomes (Yi ) they
attain. Conditioned on the underlying health status, the hospital cannot provide any additional information about any of the other variables. Conversely, learning their hospital is
only helpful inasmuch it allows us to infer something about their health status.
The following lemma states that we can characterize how the information about the
categorical variable Gi enters the model: the conditional expectation function of the outcome
depends only on the conditional probabilities of the latent variable given the observable
category. This fact will be crucial when deriving the representation methods in future
sections.
Lemma 1. Suppose that the latent state Li is discrete with k possible levels, and that the
probabilistic structure required by the sufficient latent state assumption (Figure 1) holds.
Then,


ψ : G → Rk , ψl (g) = P Li = l Gi = g
(4)
provides a sufficient representation of Gi in the sense of (3):
Pk
µ(x, g) =

l=1



 
E Yi Xi = x, Li = l P Xi = x Li = l ψl (g)
.


Pk
l=1 P Xi = x Li = l ψl (g)
4

(5)

Expression (5) formalizes the intution laid out in the previous paragraph. The information associated
only enters the conditional expectation via the set of
 with the category

probabilities P Li = ` Gi = g . If there are only k latent groups, then each category can be
represented in a lossless manner by a k dimensional vector of probabilities. An immediate
consequence of this result is that if we knew ψ and gave training examples ((Xi , ψ(Gi )), Yi )
to any universally consistent learner, the learner would eventually recover the optimal prediction function µ(·). To continue the example at the top of this section, the identity of the
hospital enters the model through the probability that a patient is in good or poor health
given the hospital.
The dependence of the conditional expectation function µ on the latent variable probabilities ψ via (5) is non-linear; however, we will retain consistency if we use an expressive
enough method for learning on ((Xi , ψ(Gi )), Yi ). Methods known to be universally consistent include k-nearest neighbors [Stone, 1977], various tree-based ensembles [Biau et al.,
2008], and neural networks [Faragó and Lugosi, 1993].
The discussion above seems to imply that we need to estimate ψ(g) = P [Li |Gi = g]
directly. However, because this quantity depends on the unobservable variable Li , its identification is impossible without further assumptions and a more sophisticated approach.
Instead we pursue a simpler approach by seeking different functions f (g) that depend only
on observables (such as f (g) = E[Xi |Gi = g]), and then proving that they are also sufficient
representations because they can be written as invertible functions of ψ(g).

3

Categorical variable encoding methods

Our methods proposed below take the form of removing the categorical column and replacing
it with a set of columns that can be proven to encode all the categorical information. Each
method exploiting the structure mentioned in the previous section. For an overview of other
categorical encoding methods already in use, please see section 6.2 in the Appendix.

3.1

Means encoding

For our first method, we drop the categorical variables Gi and substitute in the average
value of the continuous regressors Xi given the categorical variable. Figure 2 shows an
illustration.
A

X1
0.95

X2
0.53

X3
0.20

A

0.86

0.71

0.64

A

0.98

0.14

0.05

B

0.28

0.91

0.82

B

0.54

0.58

0.27

B

0.18

0.69

0.40

G

...

...

...

...

X1
X̄3g

X̄1g

X̄2g

A

0.93

0.46

0.3

B

0.34

0.72

0.5

...

...

...

Group-wise means

X2

X3

X̄1g

X̄2g

X̄3g

0.95

0.53

0.20

0.93

0.46

0.3

0.86

0.71

0.64

0.93

0.46

0.3

0.98

0.14

0.05

0.93

0.46

0.3

0.28

0.91

0.82

0.54

0.58

0.27

0.34
0.34

0.72
0.72

0.5
0.5

0.18

0.69

0.40

0.34

0.72

0.5

...

...

...

...

...

...

Resulting data set

Original data set

Figure 2: Implementation example of the means encoding.3
3 In Figure 2 and subsequent Figures 4 and 5, for easy interpretability, we show the M xp matrix Ω
b T . The
reason being that the ultimate implementation of ψ(g) in statistical software requires appending the group
encoding to the row the original categorical variable corresponded to.

5

This representation is easily interpretable, and it is simple to implement efficiently. This
method may be particularly applicable in instances where the number of regressors p is small
relative to the number of categories p  |G|, since then the dimensionality reduction is more
dramatic as compared to traditional encoding methods such as one-hot encoding. Figure
3 provides an intuitive explanation for why we should expect this to work: the group-wise
averages of the continuous variables (X1 , X2 ) may reveal the dominant latent group in each
category.
(E[X1|Gi], E[X2|Gi])

(X1, X2)

X2

4

category
A
B
C
D

4

2

2

0

0

2

2

4

4
4

2

0

X1

2

4

4

2

0

2

4

Figure 3: Intution for the means encoding on illustrative data. Here, categories (A, B) and
(C, D) are associated with separate latent groups.
The next lemma presents the conditions in which this representation provides a sufficient
representation. All proofs are in the appendix.
Lemma 2. Under the conditions
 of Lemma 1, suppose in addition that the matrix A defined
by
(A)
:=
E
X
L
=
l
is left-invertible. Then, the p-dimensional vectors ω(g) :=
tj 
it
i

E Xi Gi = g are sufficient representations of each category in the sense of (3):
Pk
µ(x, g) =

3.2

l=1



 
E Yi Xi = x, Li = l P Xi = x Li = l (A† ω(g))l


Pk
†
l=1 P Xi = x Li = l (A ω(g))l

(6)

Low-rank encodings

The means encoding method may efficiently summarize the effect of the categorical variables
if the continuous covariates are reasonably low-dimensional so that p  M . When p is large,
it might be beneficial to use a lower-dimensional representation of the conditional means. We
suggest two low-rank encoding methods, both involving matrix factorization of the transpose
of our group-wise means matrix Ω of the continuous covariates where (Ω)jg = E[Xij |G = g].

6

Algorithm 1 Means Encoding Method
procedure GroupAverages(X, G)
b ← 0p×M
Ω
. Compute group-wise averages of continuous covariates
for g in 1:M do
P
1
b ·,g ←
4:
Ω
i:Gi =g Xi
|{i:Gi =g}|
b
5:
return Ω

1:

2:
3:

6:

procedure MeansEncoding(X, G)
b ← GroupAverages(X, G)
Ω
S ← 0n×p
for i in 1:n do
b ·,G
11:
Si,· ← Ω
i
12:
return S
7:

8:
9:
10:

A

X1
0.95

X2
0.53

X3
0.20

A

0.86

0.71

0.64

A

0.98

0.14

0.05

B

0.28

0.91

0.82

B

0.54

0.58

0.27

B

0.18

0.69

0.40

G

...

...

...

X̄1g

X̄2g

X̄3g

A

0.93

0.46

0.3

B

0.34

0.72

0.5

...

...

...

. Populate with group averages

U

p×p

Group-wise means

...

D

VT

M ×M

M ×p

Singular value decomposition

X1
0.95

X2
0.53

X3
0.20

0.86

0.71

0.64

-0.77

-0.64

0.98

0.14

0.05

-0.77

-0.64

0.28

0.91

0.82

0.54

0.58

0.27

-0.64
-0.64

0.77
0.77

0.18

0.69

0.40

-0.64

0.77

...

...

...

U·,1

-0.77

...

U·,2

-0.64

...

Resulting data set

Original data set

Figure 4: Implementation example of the low-rank encoding with singular value decomposition. Alternatively, we could also have used sparse PCA in place of SVD.
One alternative is to consider the factorization of the transpose of our p × M group-wise
means matrix Ω using singular value decomposition ΩT = U DV T . Then we can use the
first k columns of the g th row of the left-singular vector matrix U as the representation for
the g th category. Note that in practice, we will be working with the empirical counterpart
b and k is in general unknown, so we recommend using cross-validation. Figure 4 provides
Ω
an illustration.
A second low-rank alternative is to use sparse principal component analysis (SPCA)
method Zou et al. [2006] instead of SVD. As the name suggests, this method extends the
original PCA algorithm by applying an elastic-net-style penalty on the coefficients of the
loadings matrix. The result is that the matrix ΩT is approximated by a sparse linear combination of vectors.4 This sort of sparsity can be advantageous for two reasons. First,
sparse PCA creates principal component sparse vectors which can be potentially more interpretable. Second, if our universal estimator is a tree-based model such as random forest
Breiman [2001] or xgboost Chen and Guestrin [2016], which fit to data by considering sin4 Formally,

for a given matrix M , the sparse PCA method solves the problem [Zou et al., 2006, eq. 3.12],
(Â, B̂) = arg min
A,B

s.t.

n
X

||Mi − AB T Mi ||2 + λ

i=1

k
X
j=1

AT A = Ik×k

||B·,j ||22 +

k
X

λ1,j ||B·,j ||1

(7)

j=1

(8)

7

gular covariates at any point in the model, it may have difficulty taking advantage of dense
principal components due to the rotation of the original covariate space. That is, if a tree
would have been able to produce a good split by using each variable separately, it may not
be able to do the same if the variables are combined linearly. On the other hand, sparse
PCA requires additional tuning of its regularization parameter λ which can be done via
cross-validation.
Lemma 3 shows that if indeed there are only k latent groups, then a representation
that uses only the first k columns of the left singular matrix or the first k sparse principal
components is indeed sufficient. As with the means method, we rely on the universal
consistency property of our estimator to learn a nonlinear mapping.
Lemma 3. Under the conditions of
 Lemma 1, suppose in addition that the matrix A
defined by (A)tj := E Xit Li = g is left-invertible. Then, the k-dimensional vectors
u(g) := Ug,1:k for are sufficient representations of each category in the sense of (3):

 
 †
Pk
T
l=1 E Yi Xi = x, Li = l P Xi = x Li = l (A V Du(g) )l
(9)
µ(x, g) =


Pk
†
T
l=1 P Xi = x Li = l (A V Du(g) )l
Algorithm 2 Low Rank Encoding Method
1:
2:
3:
4:
5:
6:
7:

procedure LowRankEncoding(X, G, k)
b ← GroupAverages(X, G)
Ω
bT )
U, D, V T ← SV D(Ω
. Singular value decomposition
S ← 0n×k
for i in 1:n do
. Populate with left singular matrix truncated rows
Si,· ← UGi ,1:k
return S

Algorithm 3 Sparse Low Rank Encoding Method
1:
2:
3:
4:
5:
6:
7:
8:

procedure SparseLowRankEncoding(X, G, k)
b ← GroupAverages(X, G)
Ω
bT )
A, B ← SP CA(Ω
. Sparse principal component analysis
T
b
Z ← Ω · B·,1:k
. Projection on truncated principal components
S ← 0n×k
for i in 1:n do
. Populate with sparse principal components rows
Si,· ← ZGi ,·
return S

3.3

Encoding by multinomial logistic regression coefficients

Finally, we propose estimating the conditional probability of category membership by multinomial logistic regression parametrized by coefficients {θg }g∈G
exp(XiT θg )
T 0
g 0 exp(Xi θg )

P (Gi |Xi ) = Λθ (Gi = g|Xi ) = P
8

(10)

and then use the p-dimensional vector of coefficients θg associated with the g th category
to represent it. The motivation for this method comes from the fact that the prediction
model µ(x, g) can be rewritten so that it only depends on the category g through P (Gi =
g|Xi = x), and under the multinomial logistic regression assumption above this boils down
to dependence on the θg coefficients.
A

X1
0.95

X2
0.53

X3
0.20

A

0.86

0.71

0.64

A

0.98

0.14

0.05

B

0.28

0.91

0.82

B

0.54

0.58

0.27

B

0.18

0.69

0.40

G

...

...

...

A
B

Xi

Λθ (Gi |Xi )

C

...

Original data set

D

θ̂g1

θ̂g2

θ̂g3

-0.31

0.02

X1
0.95

X2
0.53

X3
0.20

0.86

0.71

0.64

1.2

-0.31

0.02

0.98

0.14

0.05

1.2

-0.31

0.02

0.28

0.91

0.82

0.54

0.58

0.27

0.05
0.05

7.52
7.52

1.53
1.53

0.18

0.69

0.40

0.05

7.52

1.53

...

Fit multinomial logistic regression,
retrieve coefficients

...

...

1.2

...

...

Resulting data set

Figure 5: Implementation example of the mnl encoding.
A related work that also uses regression coefficients as categorical representations is
the natural language processing word2vec model of Mikolov et al. [2013]. The authors of
word2vec propose two methods to represent words (categories) in a large corpus of text
as relatively low-dimensional real-valued vectors. In one of these methods, each word is
initially assigned two representations: as a center word vw , and as a surrounding context
word vc . Then, the authors posit that the optimal representation is the one that maximizes
T
vc for all pair of words
the log-probability of the inner product of the two representations vw
(w, c) that co-occur near each other. Our method works in an analogous way if we let the
continuous vectors Xi stand in as “contexts”, and let θg ∈ Rp represent each category, since
then maximizing the log-probability of the inner product XiT θg is the same as maximizing
the multinomial logistic regression above.
Lemma 4. Under theconditions of
 Lemma 1, suppose in addition that A in (25) is leftinvertible, and that P Gi = g Xi is the multinomial logit distribution with coefficients
{θg }g∈G containing an intercept. Then, the vector θg ∈ Rp is sufficient in the sense of (3):

 
 †
Pk
l=1 E Yi Xi = x, Li = l P Xi = x Li = l (A f (θg ))l
µ(x, g) =
(11)


Pk
†
l=1 P Xi = x Li = l (A f (θg ))l
where

f (θg ) :=

EX [Xi Λθ (g|Xi )]
EX [Λθ (g|Xi )]

(12)

Algorithm 4 Multinomial logistic regression method (MNL)
procedure MNL(X, G)
P
θ̂ ← arg minθ i log Λθ (Gi |Xi )
. Multinomial logistic regression
S ← 0n×p
4:
for i in 1:n do
. Populate with left singular matrix truncated rows
5:
Si,· ← θ̂Gi
6:
return S

1:

2:
3:

9

4

Experiments

In the following section, we explore each method’s effectiveness relative to one hot encoding
across simulated and real world data sets. We apply two typically used methods: random
forests and xgboost.5

4.1

Simulations

We consider two simulations designs that share the distributions of latent groups Li , observable groups Gi and covariates Xi , but whose outcome models for Yi differ.
Latent groups, observable groups and continuous covariates A latent group Li is
drawn uniformly from the set of available groups, which we identify with integers.
Li ∼ Uniform({1, ..., |L|})

(13)

Next, observable groups Gi are drawn according to the following rule. First, we partition
|L|
the set of possible observable groups G into equally-sized sets {G` }`=1 . Then, we draw the
observable group Gi so that observations that were assigned latent group L1 have higher
probability of falling into observable group G1 , those in L2 likely belong to G2 , and so on.
In symbols,

 pLi
if g ∈ GLi
|GL |
where pLi > 0.5
(14)
P (Gi = g | Li ) = 1−piLi
 |GC |
otherwise
Li

Covariates associated with latent group Li = ` are normally distributed as Xi ∼
N (µ` , Σ). The mean is zero except for a randomly drawn set of entries J that are −1, +1,
with |J | = 3.
(
 |k−j|
0
if j ∈ J
1
(Σ)kj =
(µ` )j =
(15)
2
Uniform({−1, 1})
otherwise
Outcomes For the outcome setups, we make each scenario noticeably more complex than
the last. In the global linear setup, each latent group has its own intercept while the slope
β is the same across latent groups.
Yi = α` + XiT β + i

(16)

where the intercept and slopes are created as follows. The slope normalization ensures that
the signal from the intercept, regressors and noise is roughly comparable.
α` ∼ Laplace(1)

for each ` ∈ L

β̃j ∼ Uniform({0, 1, −1})

β=

(17)
β̃
β̃

(18)
2

i ∼ N (0, 1)
5 Simulation

(19)

code can be found at: https://github.com/grf-labs/sufrep.

10

In the latent linear setup, we increase the dependence on the latent groups and the
outcome model is linear in regressors conditional on coefficients that are specific to each
latent group.
Yi = α` + XiT β` + i

(20)

where
β̃`j ∼ Uniform({0, 1, −1})

β` =

β˜`
β˜`

(21)
2

Finally, in the latent piecewise linear setup, we compute a dyadic basis by partitioning
each feature Xi by its median and then assigning different latent group betas (βl+ or βl− )
depending on whether or not the observed Xi is above or below its feature’s median.
Yi = α` +

p
X
j=1

T +
T −
1{Xij > Med(xj )} · Xij
β`j + 1{Xij ≤ Med(xj )} · Xij
β`j + i

(22)

where
+
−
β̃`j
, β̃`j
∼ Uniform({0, 1, −1})

4.2

β`+ =

β̃`+
β̃`+

β`− =
2

β̃`−
β̃`−

(23)
2

Simulation Results

For each simulated dataset, we estimated the outcome using the various methods described
in Section 3, and then evaluated the predictions by their mean squared error. We simulated
each simulation setup and model for 200 randomly generated seeds.

Figure 6: Percent Improvement over One Hot Encoding for Regression Forests.
Results for the simulations are provided in 6. We find that the methods described above
which seek to estimate the latent groups consistently outperform methods which require
11

adding |G| additional columns to our input matrix X for both the regression forest and
xgboost. In particular, it appears that the sparse low rank approach tends to do well when
the number of latent groups is very small. For a larger number of latent groups, we see
that low rank approaches underperform and the multinomial and means encoding perform
better. We also take note on how the multinomial weight approach potentially does well
in this case possibly because n is large and the number of observations per group is high
enough to satisfy this approach.
For the methods that do not take advantage of the low rank structure, we notice that
the main improvement in performance for regression forests and xgboost occurs due to the
reduction in dimensionality. We find that the permutation, fisher, and multiple permutation methods are on average much better than the methods that add |G| columns but still
underperform relative to the methods that estimate the latent groups.
While the performance improvements over one hot encoding for 2 latent groups ranges
from 1-10%, performance improvement can approach 27-33% for 10 latent groups. Intuitively, we find that this benefit is generally less prevalent for 2 latent groups for regression
forests and xgboost due to the lesser complexity of the underlying relationship as defined
by the conditional independence graph in 1. The improvement over one hot encoding also
tends to increase as the signal becomes more dependent on latent group membership. In
most cases, performance on the piecewise linear simulations maintain the same or higher
percent improvement over one hot encoding. Furthermore, we find that a more complex
and nonlinear method like xgboost benefits slightly less from these encoding methods.

Figure 7: Percent Improvement over One Hot Encoding for xgboost.

4.3

Empirical Applications

We also evaluate these methods on publicly available datasets that are accessible on Kaggle.
We run 4 fold, stratified cross validation on the datasets to avoid the case where there are
categorical variables in the test set which are not contained in the training set. Since we are
throwing out what could potentially be a sizable amount of information with each fold, we
12

also conduct a paired t-test to further validate or deny results seen in the cross validation
process.
Pakistan Educational Performance In Hemani [2017], Hemani consolidated a series
of surveys from Alif Ailaan, a nonprofit organization in Pakistan that focuses on improving
education across the country. The objective of the surveys was to provide an objective
means of comparing school systems across cities and provinces in order to spark competition
between local governments to spur educational reform.
The dataset used in the analysis below contains n = 580 and 504 after removing null
valued rows which can be broken down into |G| = 127 cities from 2013 to 2016. The number
of additional covariates p is 20 and further data cleaning and preprocessing details are
elaborated upon in the github.
Ames Housing The objective of the Ames Housing Dataset De Cock [2011] was to act as
a more complex alternative to the Boston Housing Dataset Harrison and Rubinfeld [1978].
De Cock’s aim was to use this dataset for the final project in his regression course which
would allow students to more extensively showcase what they had learned.
The Ames Housing Dataset has n = 2, 930 individual home sales in Ames, Iowa from
2006 to 2010. The dataset has 80 covariates and our categorical variable “neighborhood”
has |G| = 25.
King County House Sales The King County House Sales Dataset from harlfoxem [2016]
is a data set containing the record of 21,613 home sales in King County, Washington between
May 2014 to May 2015. The author does not provide much additional information aside
from it being a good dataset to test regression models. The dataset is relatively popular
with over 169,000 views and 28,000 downloads at the time of this paper.
The data itself came with 21 covariates including the sale price of the house. We treat
the “zipcode” covariate, which has |G| = 70, as the categorical variable.

4.4

Empirical Results

We can see that for Regression Forests on average there is an improvement over one hot
encoding and xgboost stands to benefit less from using these encoding methods over one hot
encoding. For regression forests, the primary case that does not benefit much from these
approaches is the Ames data set which follows naturally since the number of covariates p
is much larger than the number of observed groups |G|. Therefore, methods such as means
and MNL are adding 80 dimensions to the prediction problem while one hot encoding only
adds 25. The Low Rank and Sparse Low Rank approaches benefit in these cases and appear
to maintain potentially promising results. Contrary to the regression forest results, most of
the xgboost output was not statistically significantly different than one hot encoding and
the Ames data set was the closest evidence to any benefit.

13

Dataset
Pakistan
Pakistan
Ames
Ames
Kingcounty
Kingcounty

Metric
MSE
p-val
MSE
p-val
MSE
p-val

Means
9.963
0.00402
1.349
0.73221
8.405
0.00445

Low Rank
8.228
0.04333
1.798
0.00930
8.671
0.01267

Sparse Low Rank
8.868
0.00089
3.987
0.06932
7.062
0.03102

MNL
8.656
0.01132
-2.120
0.81650
8.054
0.00364

Table 1: Observational Dataset Results for Regression Forests.
For regression forests, on average, it looks like low rank approaches to generating encodings were most robust across data sets. This could be due to the reduction in dimensionality
which may be beneficial for two reasons. First, the underlying relationships were much lower
rank than the number of covariates and these methods were able to capture this information. Second, if there was no signal in the categorical variable to begin with, the low rank
approaches which utilize K-fold to determine the dimensionality of the encoding are able to
pick small k number of encoding vectors to reduce the potential noise covariates one would
be adding.
Dataset
Pakistan
Pakistan
Ames
Ames
Kingcounty
Kingcounty

Metric
MSE
p-val
MSE
p-val
MSE
p-val

Means
2.904
0.52714
7.382
0.31597
0.773
0.67990

Low Rank
0.668
0.88127
9.736
0.07341
-3.243
0.62293

Sparse Low Rank
2.528
0.29955
14.889
0.13348
2.468
0.49389

MNL
-3.391
0.23304
1.890
0.59210
-0.471
0.87640

Table 2: Observational Dataset Results for XGBoost.

5

Conclusion

In this paper, we explore the task of mapping high-cardinality categorical variables Gi
to a lower-dimensional real space without loss of information relevant to our response Yi .
To do this, we make an assumption about the relationship between Gi and Yi which we
call the sufficient latent state assumption. This assumption provides us with the basis for
creating encoding methods which can be used by universally consistent estimators to extract
sufficient representations of Gi . Among our recommendations for encoding methods, we
provide encoding methods which are interpretable or focus more on reducing the size of the
Rk representation. We find that these methods tend to outperform one hot encoding and
other traditional approaches to modeling with categorical variables as the number of unique
categories increases.

14

6
6.1

Appendix
Proofs

Definitions

The following matrices that will be used below.

 
E X1 G = g1 · · ·

..
..
Ω=
.
.


E Xp G = g1 · · ·

 
E X1 L = l1 · · ·

..
..
A=
.
.


E Xp L = l1 · · ·

 
P L = l1 G = g1

..
Ψ=
.


P L = lK G = g1



E X1 G = gM




E Xp G = gM p×M


E X1 L = lK




E Xp L = lK p×K


· · · P L = l1 G = gM

..

.


· · · P L = lK G = gM K×M

(24)

(25)

(26)

We denote the columns of Ω as ω(g) and the columns of Ψ as ψ(g).
Overview Proof 6.1.1 shows that categories Gi only enter the conditional expectation
function µ(x, g) through the latent state probabilities ψ(g). Proofs 6.1.2-6.1.4 rely on strategies for writing ψ(g) = f (h(g)) then showing that h(g) is also a sufficient representation.
6.1.1

Proof of Lemma 1

Proof. To show the equivalence of (1) and (5), we begin by expanding (1) as
µ(x, g) =

L
X


 

E Yi Xi = x, Gi = g, Li = l P Li = l Xi = x, Gi = g

(27)

l=1

Now, the conditional independence assumptions encoded in our graph imply that the expectation term simplifies to




E Yi Xi = x, Gi = g, Li = l = E Yi Xi = x, Li = l
(28)
while the second term can be rewritten using Bayes rule as

 



P Xi = x Li = l P L = l Gi = g
P Li = l Xi = x, Gi = g = Pk


0
0
l0 =1 P Xi = x Li = l P [L = l |Gi = g]

(29)

Combining the above, we see that the mapping µ only depends on the categorical variable
through the multivariable function ψ(g) = P [Li |Gi = g]. Therefore, ψ(g) is a sufficient
representation as defined in (3).

15

6.1.2

Proof of Lemma 2

Proof. Begin by noting that conditioanl expectations can be computed as a linear combination of the sufficient statistics discussed in Lemma 1.
K

 X

 

E Xi Gi = g =
E Xi Li = l P Li = l Gi = g

(30)

l=1

=

K
X



E Xi Li = l ψl (g)

(31)

l=1

or, in matrix form,
Ω = AΨ

(32)

where these matrices are defined as in the top of this section. The sufficient representation
for the category ψ(g) = Ψg lies on the linear span of the set of columns of A. Since A
has a left-inverse A† such that A† A = I, we can retrieve the representations by matrix
multiplication.
ψ(g) = (Ψ)·,g = A† (Ω)·,g =: A† ω(g)

(33)

Since ψ(g) only depends on g through ω(g), it follows that ω(g) is also a sufficient representation for the category g.
6.1.3

Proof of Lemma 3

Proof. The proof is similar to the the previous one. However, this time note that we can
decompose the ΩT = U DV T using singular value decomposition, where the matrices have
dimensions |G| × |G|, |G| × p, and p × p respectively. Letting u(g) : g 7→ (U )g,1:k , we can
write
ψ(g) = A† V DT u(g)T

(34)

where D and V do not depend on the category g and k is the true number of latent groups
and column rank of ΩT . Finally, to complete the proof, we substitute V Du(g)T with ω(g)
in (33).

6.1.4

Proof of Lemma 4



Proof. We begin by
 noting that
 we can use Bayes’ theorem to express ω(g) = E Xi G = g
as a function of P G = g Xi , here is assumed to be multinomial logit.


EX|G Xi Gi = g = EX [Xi P [Xi |Gi = g]]

EX [Xi P [Gi = g|Xi ]]
=
P [Gi = g]
EX [Xi P [Gi = g|Xi ]]
 

=
EX P Gi = g Xi
=

EX [Xi Λθ (g|Xi ]
EX [Λθ (g|Xi )]

16

(35)
(36)
(37)
(38)

However, note that expression (38) only depends on the category through the mutinomial
logit coefficients θg that are associate with category g. Therefore, under this assumption
we can write ω(g) = f (θg ) =: E[Xi |G = g]. However, recall from (33) that if the matrix
(A)j` := E[Xij |Li = `] has a left-inverse A† A = I, we can write
ψ(g) = A† ω(g) = A† f (θg )

(39)

Since ψ(g) only depends on g through θ(g), it follows that θ(g) is also a sufficient representation for the category g.

6.2

Additional Encoding Methods

For a more in-depth treatment, see Venables [2016]. Note that several of the methods
below are simple linear transformations of each other and should yield equivalent levels of
performance in theory. However, as we will see in sections 4.2 and 4.3, in practice the
resulting performance can differ substantially.
One-hot or dummy This is the most common categorical encoding, and it is the method
we take to be our main baseline, against which we will compare all other methods. It expands
out the categorical column into k − 1 columns where k is the number of unique elements
in the set of categorical levels in the column. Each column is binary 1 or 0 depending on
whether the corresponding level was observed in the original categorical column. [Murphy,
2012, sec 2.3.2]

a
b
c
d
e

b
0
1
0
0
0

c
0
0
1
0
0

d
0
0
0
1
0

e
0
0
0
0
1

Deviation Similar to one-hot encoding except that the k th unique element’s row that is
the reference level is now set to all values of −1. This means that categorical levels are
being compared to the grand mean of all of the levels instead of the mean of a given level
with respect to the reference level.

a
b
c
d
e
Difference

b
1
0
0
0
-1

c
0
1
0
0
-1

d
0
0
1
0
-1

e
0
0
0
1
-1

Compares a given level to the mean of the levels that precede it.

17

b
-0.5
0.5
0.0
0.0
0.0

a
b
c
d
e

c
-0.333
-0.333
0.667
0.000
0.000

d
-0.25
-0.25
-0.25
0.75
0.00

e
-0.2
-0.2
-0.2
-0.2
0.8

Helmert Compares levels of a chosen categorical variable to the mean of the subsequent
levels uniquely observed thus far.
b
0.80
-0.20
-0.20
-0.20
-0.20

a
b
c
d
e

c
0.00
0.75
-0.25
-0.25
-0.25

d
0.00
0.00
0.67
-0.33
-0.33

e
0.00
0.00
0.00
0.50
-0.50

Repeated Effect Columns are encoded to represent a cumulative comparison of subsequent levels with previous ones.

a
b
c
d
e

b
0.8
-0.2
-0.2
-0.2
-0.2

c
0.6
0.6
-0.4
-0.4
-0.4

d
0.4
0.4
0.4
-0.6
-0.6

e
0.2
0.2
0.2
0.2
-0.8

Permutation Assigns a unique integer to each category. Note that even when the categories do not possess an intrinsic ordering, some mappings may yield better results if they
happen to be aligned with the true average effect the category has on the outcome variable.

a
b
c
d
e

perm
5
3
4
1
2

Multi-Permutation (Multi-Perm) Following the intuition above, with a larger number
of columns we might find more interesting permutations. Hence, we also experiment with
four random integer mappings at once.

18

a
b
c
d
e

perm1
1
2
3
4
5

perm2
5
3
1
4
2

perm3
4
5
2
1
3

perm4
2
3
4
1
5

Fisher taken from Hastie et al. [2009], we order the categories by increasing mean of the
response.
For the following five methods, we use information about the continuous covariates to construct the mapping ψ.

References
Joshua D Angrist and Jörn-Steffen Pischke. Mostly harmless econometrics: An empiricist’s
companion. Princeton university press, 2008.
Dmitry Arkhangelsky and Guido Imbens. The role of the propensity score in fixed effect
models. Technical report, National Bureau of Economic Research, 2018.
Gérard Biau, Luc Devroye, and Gábor Lugosi. Consistency of random forests and other
averaging classifiers. The Journal of Machine Learning Research, 9:2015–2033, 2008.
Stéphane Bonhomme and Elena Manresa. Grouped patterns of heterogeneity in panel data.
Econometrica, 83(3):1147–1184, 2015.
Leo Breiman. Random forests. Machine Learning, 45(1):5–32, 2001.
Leo Breiman, Jerome Friedman, Charles J Stone, and Richard A Olshen. Classification and
Regression Trees. CRC press, 1984.
Patricio Cerda, Gaël Varoquaux, and Balázs Kégl. Similarity encoding for learning with
dirty categorical variables. Machine Learning, pages 1–18, 2018.
Tianqi Chen and Carlos Guestrin. Xgboost: A scalable tree boosting system. In Proceedings
of the 22nd acm sigkdd international conference on knowledge discovery and data mining,
pages 785–794. ACM, 2016.
Dean De Cock. Ames, iowa: Alternative to the boston housing data as an end of semester
regression project. Journal of Statistics Education, 19(3), 2011.
Peter J Diggle, Patrick J Heagerty, Kung-Yee Liang, and Scott Zeger. Analysis of longitudinal data. Oxford University Press, 2002.
András Faragó and Gábor Lugosi. Strong universal consistency of neural network classifiers.
IEEE Transactions on Information Theory, 39(4):1146–1151, 1993.
Jerome H Friedman. Greedy function approximation: a gradient boosting machine. Annals
of statistics, pages 1189–1232, 2001.

19

harlfoxem. House sales in king county,usa, 2016.
harlfoxem/housesalesprediction/.

URL https://www.kaggle.com/

David Harrison, Jr and Daniel L Rubinfeld. Hedonic housing prices and the demand for
clean air. Journal of Environmental Economics and Management, 5(1):81–102, 1978.
Trevor Hastie, Robert Tibshirani, and Jerome Friedman. The Elements of Statistical Learning. New York: Springer, 2009.
Trevor Hastie, Robert Tibshirani, and Martin Wainwright. Statistical Learning with Sparsity: The Lasso and Generalizations. CRC Press, 2015.
Mesum Raza Hemani. Pakistan education performance dataset, 2017. URL https://www.
kaggle.com/mesumraza/pakistan-education-performance-dataset/.
Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Efficient estimation of word
representations in vector space. In International Conference on Learning Representations,
2013.
Kevin Murphy. Machine learning, a probabilistic perspective, 2012.
Jerzy Neyman and Elizabeth L Scott. Consistent estimates based on partially consistent
observations. Econometrica: Journal of the Econometric Society, pages 1–32, 1948.
Jeffrey Pennington, Richard Socher, and Christopher Manning. Glove: Global vectors for
word representation. In Proceedings of the 2014 conference on empirical methods in natural
language processing (EMNLP), pages 1532–1543, 2014.
Ali Rahimi and Benjamin Recht. Random features for large-scale kernel machines. In
Advances in neural information processing systems, pages 1177–1184, 2008.
Charles J Stone. Consistent nonparametric regression. The Annals of Statistics, pages
595–620, 1977.
WN Venables. codingmatrices: Alternative factor coding matrices for linear model formulae
[software], 2016.
Yixin Wang and David M Blei.
arXiv:1805.06826, 2019.

The blessings of multiple causes.

arXiv preprint

Jeffrey M Wooldridge. Econometric analysis of cross section and panel data. MIT press,
2010.
Hui Zou, Trevor Hastie, and Robert Tibshirani. Sparse principal component analysis. Journal of computational and graphical statistics, pages 265–286, 2006.

20

